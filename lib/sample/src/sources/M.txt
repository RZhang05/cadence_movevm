// Move bytecode v5
module 2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a.M {


public imper_fib(Arg0: u64): u64 {
L0:     loc1: u64
L1:     loc2: u64
L2:     loc3: u64
B0:
        0: LdU64(1)
        1: StLoc[1](loc0: u64)
        2: LdU64(1)
        3: StLoc[2](loc1: u64)
        4: CopyLoc[1](loc0: u64)
        5: StLoc[3](loc2: u64)
        6: LdU64(2)
        7: StLoc[4](loc3: u64)
B1:
        8: CopyLoc[4](loc3: u64)
        9: CopyLoc[0](Arg0: u64)
        10: Lt
        11: BrTrue(13)
B2:
        12: Branch(26)
B3:
        13: MoveLoc[1](loc0: u64)
        14: CopyLoc[2](loc1: u64)
        15: Add
        16: StLoc[3](loc2: u64)
        17: MoveLoc[2](loc1: u64)
        18: StLoc[1](loc0: u64)
        19: CopyLoc[3](loc2: u64)
        20: StLoc[2](loc1: u64)
        21: MoveLoc[4](loc3: u64)
        22: LdU64(1)
        23: Add
        24: StLoc[4](loc3: u64)
        25: Branch(8)
B4:
        26: MoveLoc[3](loc2: u64)
        27: Ret
}
public recur_fib(Arg0: u64): u64 {
B0:
        0: CopyLoc[0](Arg0: u64)
        1: LdU64(2)
        2: Lt
        3: BrTrue(5)
B1:
        4: Branch(7)
B2:
        5: MoveLoc[0](Arg0: u64)
        6: Ret
B3:
        7: CopyLoc[0](Arg0: u64)
        8: LdU64(1)
        9: Sub
        10: Call[1](recur_fib(u64): u64)
        11: MoveLoc[0](Arg0: u64)
        12: LdU64(2)
        13: Sub
        14: Call[1](recur_fib(u64): u64)
        15: Add
        16: Ret
}
}